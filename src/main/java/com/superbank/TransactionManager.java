/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.superbank;

import static spark.Spark.before;
import static spark.Spark.exception;
import static spark.Spark.get;
import static spark.Spark.post;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.eclipse.jetty.http.HttpStatus;

import com.superbank.controller.AccountController;
import com.superbank.exceptions.ValidationException;
import com.superbank.model.Account;
import com.superbank.utils.ConversionUtils;

public class TransactionManager {
	

	private static final Logger LOGGER = LogManager.getLogger(TransactionManager.class);
	
	public static void main(String[] args) {
		
		AccountController accountController = new AccountController();
		
		LOGGER.info("START");
		
	    before("/*", (request, response) -> LOGGER.info("Received API call " + request.requestMethod() + " to path: " + request.uri()));
	    
        get("/account/:accountNumber", (request, response) -> {
        	Account account = accountController.getAccount(request.params("accountNumber"));
        	return ConversionUtils.toJson(account);
        });
        
        post("/account", (request, response) -> {
        	Account requestAccount = ConversionUtils.fromJson(request.body(), Account.class);
        	
        	try {
        	Account createdAccount = accountController.insertAccount(requestAccount);
        	response.status(HttpStatus.CREATED_201);
        	return ConversionUtils.toJson(createdAccount);
        	}
        	catch (ValidationException validationException) {
        		response.status(HttpStatus.BAD_REQUEST_400);
            	return validationException.getMessage();
        	}
        });
    }
    
}
